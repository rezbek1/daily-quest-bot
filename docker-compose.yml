# üñ§ –ü–û–í–°–ï–î–ù–ï–í–ù–´–ô –ö–í–ï–°–¢ - Docker Compose
# –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å Redis –∏ –¥—Ä—É–≥–∏–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏

version: '3.8'

services:
  # Telegram Bot
  bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: daily-quest-bot
    restart: unless-stopped
    environment:
      NODE_ENV: development
      LOG_LEVEL: debug
      # –ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ .env —Ñ–∞–π–ª–∞
    env_file:
      - .env
    depends_on:
      - redis
    networks:
      - daily-quest-network
    volumes:
      - ./src:/app/src
      - ./logs:/app/logs
    ports:
      - "3000:3000"

  # Redis –¥–ª—è –æ—á–µ—Ä–µ–¥–µ–π (Bull)
  redis:
    image: redis:7-alpine
    container_name: daily-quest-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - daily-quest-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Redis Commander –¥–ª—è debug (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: daily-quest-redis-commander
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - daily-quest-network

networks:
  daily-quest-network:
    driver: bridge

volumes:
  redis_data:
    driver: local
